package model;

/**
 * Универсальный класс задач, родитель любой сущности, управляемой менеджером.
 *
 * Использовать абстрактный класс - было одним из возможных решений и выбран он был мной осознанно, в учебных целях.
 * Желательный способ в виде Task также был указан, но хотелось поиграть с не знакомой сущностью - абстрактные классы.
 * И пока я не готова с ней расстаться. Вдруг, в следующих спринтах появятся другие типы задач.
 * Все-таки, это учебный процесс и делать одинаковые решения под копирку, мне скучно. Мне этого хватает на работе.
 * Поэтому прошу Вас Виталий, на будущее, оставить мне простор для воображения, экспериментов и радости познания нового.
 * Создавать копии решений разжеванных на вебинара QA, которые я кстати пропускаю, так как считаю спойлером,
 * мне неинтересно.
 * Если вам кажется, что я отхожу от ТЗ потому, что не умею его читать, то вы ошибаетесь. Все мои отступления носят
 * исследовательский характер, не нарушающих основных требований по проекту.
 * Хотя конечно, язык java мне не знаком и я нуждаюсь в ваших советах для лучшего понимания
 * подходов в этом языке. Готова выполнять все рекомендации, из не обязательных, в том числе, но с пониманием зачем
 * я это делаю. Если на текущем этапе что-то просто сделать ради сделать ... не хотелось бы.
 * По вашему замечанию "но в целом лучшим решением всегда будет делать ровно то, что есть в ТЗ,
 * и делать это максимально хорошо." Соглашусь с частью, что если базовый функционал выдает ошибку и написан кое-как,
 * то не до экспериментов. Но если мой код выполнил основной функционал, то почему не провести эксперимент и получить
 * отзыв профессионала, да и просто опыт программирования на новом языке? Разве мы не для этого пошли учиться к вам?
 * В будущем, я вряд ли буду ограничиваться исключительно базой, и если все мои эксперименты
 * будут с вашей точки зрения лишними или просто будут игнорироваться, то учебный процесс для меня превратиться в боль
 * и страдания. Извините за лирику, но меня не предупреждали о смене ревьюера, ваш подход отличается от подхода вашего
 * предшественника и мне надо время к этому привыкнуть.
 * Надеюсь на плодотворное сотрудничество и взаимопонимание.
 */
public abstract class Issue {

    private final int id;             // Идентификатор
    private final String title;       // Название
    private final String description; // Описание
    private IssueStatus status;       // Статус

    public Issue(int id, String title, String description) {
        this.id = id;
        this.title = title;
        this.description = description;
        this.status = IssueStatus.NEW;
    }

    public int getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getDescription() {
        return description;
    }

    public IssueStatus getStatus() {
        return status;
    }

    protected void setStatus(IssueStatus status) {
        this.status = status;
    }

    @Override
    public String toString() {
        return "Task{" +
                "id=" + id +
                ", title='" + title + '\'' +
                ", description='" + description + '\'' +
                ", status=" + status +
                ", hash='"  + hashCode() + '\'' +
                '}';
    }
}
